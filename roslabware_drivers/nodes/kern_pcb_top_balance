#!/usr/bin/env python3

# External
import argparse
import rospy

from roslabware_drivers.ika_ret_control_visc import TopBalanceRos

if __name__ == "__main__":
    # Get arguments needed
    parser = argparse.ArgumentParser(
        prog="Kern Top balance ROS",
        description='ROS node for a Kern Top balance')
    parser.add_argument(
        '-d',
        '--device_name',
        action='store',
        default='rct_ika_hotplate',
        nargs='?',
        const=1,
        help='Device name')
    parser.add_argument(
        '-c',
        '--connection_mode',
        action='store',
        default='serial',
        nargs='?',
        const=1,
        help='Connection mode: "tcpip", "serial" or "http"')
    parser.add_argument(
        '-add',
        '--address',
        action='store',
        default='None',
        nargs='?',
        const=1,
        help='IP Address.')
    parser.add_argument(
        '-p',
        '--port',
        action='store',
        default='/dev/ttyUSB0',
        nargs='?',
        const=1,
        help='Serial or TCP/IP port')

    args = parser.parse_args()

    # Initialize ROS node
    rospy.init_node("TopBalance Driver", anonymous=True)

    # Objectoriented initialization of ROS
    kern_ros = TopBalanceRos(
        device_name=args.device_name,
        connection_mode=args.connection_mode,
        address=args.address,
        port=args.port,
        sensor=args.sensor)

    rospy.loginfo("Kern balance driver started")
    rospy.spin()
