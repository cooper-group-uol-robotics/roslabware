#!/usr/bin/env python3

# External
import argparse

import rospy
from roslabware_drivers.lcms import LcmsRos

# Object oriented initialization for ROS
if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog="LCMS ROS",
        description='ROS node for LCMS')
    parser.add_argument(
        '-ld',
        '--l_device_name',
        action='store',
        default='lcms',
        nargs='?',
        const=1,
        help='Device name')
    parser.add_argument(
        '-lc',
        '--l_connection_mode',
        action='store',
        default='serial',
        nargs='?',
        const=1,
        help='Connection mode: "tcpip", "serial" or "http"')
    parser.add_argument(
        '-ladd',
        '--l_address',
        action='store',
        default="172.31.1.18",
        nargs='?',
        const=1,
        help='IP Address.')
    parser.add_argument(
        '-lp',
        '--l_port',
        action='store',
        default=8000,
        nargs='?',
        const=1,
        help='Serial or TCP/IP port')
    parser.add_argument(
        '-ll',
        '--l_simulation',
        action='store',
        nargs='?',
        const=1,
        default='False',
        help='Simulation mode or not (bool)')

    parser.add_argument(
        '-lx',
        '--l_exname',
        action='store',
        nargs='?',
        const=1,
        default='test',
        help='Experiment name')

    args, unknown = parser.parse_known_args()

    # Initiliaze rospy node
    rospy.init_node("LCMS Driver", anonymous=True)

    # Create instance of ROS Wrapper
    lcms_ros = LcmsRos(
        device_name=args.l_device_name,
        connection_mode=args.l_connection_mode,
        address=args.l_address,
        port=args.l_port,
        simulation=args.l_simulation,
        experiment_name=args.l_exname
    )

    # Keeps python from exiting until node is stopped
    rospy.spin()
