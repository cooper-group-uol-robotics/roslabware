#!/usr/bin/env python3

# External
import argparse
import rospy

from roslabware_drivers.base_valve import BaseValveRos

if __name__ == "__main__":
    # Get arguments needed
    parser = argparse.ArgumentParser(
        prog="Base valve ROS",
        description='ROS node for the optimax base valve')
    parser.add_argument(
        '-bvd',
        '--bv_device_name',
        action='store',
        default='base_valve',
        nargs='?',
        const=1,
        help='Device name')
    parser.add_argument(
        '-bvc',
        '--bv_connection_mode',
        action='store',
        default='serial',
        nargs='?',
        const=1,
        help='Connection mode: "tcpip", "serial" or "http"')
    parser.add_argument(
        '-bvadd',
        '--bv_address',
        action='store',
        default='None',
        nargs='?',
        const=1,
        help='IP Address.')
    parser.add_argument(
        '-bvp',
        '--bv_port',
        action='store',
        default='COM7',
        nargs='?',
        const=1,
        help='Serial or TCP/IP port')

    parser.add_argument(
        '-bvl',
        '--bv_simulation',
        action='store',
        nargs='?',
        const=1,
        default='False',
        help='Simulation mode or not (bool)')

    args, unknown = parser.parse_known_args()

    # Initialize ROS node
    rospy.init_node("Base Valve Driver", anonymous=True)

    # Objectoriented initialization of ROS
    kern_ros = BaseValveRos(
        device_name=args.bv_device_name,
        connection_mode=args.bv_connection_mode,
        address=args.bv_address,
        port=args.bv_port,
        simulation=args.bv_simulation)

    rospy.loginfo("Base valve driver started")
    rospy.spin()
