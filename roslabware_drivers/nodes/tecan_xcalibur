#!/usr/bin/env python3

# External
import argparse
import rospy

from roslabware_drivers.tecan_xcalibur import XCaliburRos

if __name__ == "__main__":
    # Get arguments needed
    parser = argparse.ArgumentParser(
        prog="XCalibur syrnge pump ROS",
        description="ROS node for XCalibur syringe pump",
    )
    parser.add_argument(
        "-d",
        "--device_name",
        action="store",
        default="rct_ika_hotplate",
        nargs="?",
        const=1,
        help="Device name",
    )
    parser.add_argument(
        "-c",
        "--connection_mode",
        action="store",
        default="serial",
        nargs="?",
        const=1,
        help='Connection mode: "tcpip", "serial" or "http"',
    )
    parser.add_argument(
        "-add",
        "--address",
        action="store",
        default="None",
        nargs="?",
        const=1,
        help="IP Address.",
    )
    parser.add_argument(
        "-p",
        "--port",
        action="store",
        default="/dev/ttyACM0",
        nargs="?",
        const=1,
        help="Serial or TCP/IP port",
    )
    parser.add_argument(
        "-w",
        "--switch_address",
        action="store",
        default="0",
        nargs="?",
        const=1,
        help="Switch address on the back of the pump",
    )
    parser.add_argument(
        "-z",
        "--syringe_size",
        action="store",
        nargs="?",
        const=1,
        help="Syringe size in mL",
    )

    parser.add_argument(
        "-l",
        "--simulation",
        action="store",
        nargs="?",
        const=1,
        default="False",
        help="Simulation mode or not (bool)",
    )

    args, unknown = parser.parse_known_args()

    # Initialize rospy node
    rospy.init_node("Tecan Xcalibur syringe pymp driver", anonymous=True)

    # Object oriented initialization for ROS
    syringe_pump = XCaliburRos(
        device_name=args.device_name,
        connection_mode=args.connection_mode,
        address=args.address,
        port=args.port,
        syringe_size=args.syringe_size,
        switch_address=args.switch_address,
        simulation=args.simulation,
    )

    # Stop everything on shutdown
    rospy.on_shutdown(syringe_pump.stop())
    rospy.spin()
