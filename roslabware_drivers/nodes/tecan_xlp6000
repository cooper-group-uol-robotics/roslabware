#!/usr/bin/env python3

# External
import argparse
import rospy

from roslabware_drivers.tecan_xlp6000 import XLP6000Ros

if __name__ == "__main__":
    # Get arguments needed
    parser = argparse.ArgumentParser(
        prog="XLP syringe pump ROS", description="ROS node for XLP6000 syringe pump"
    )
    parser.add_argument(
        "-td",
        "--t_device_name",
        action="store",
        default="tecan_xlp6000_syringe_pump",
        nargs="?",
        const=1,
        help="Device name",
    )
    parser.add_argument(
        "-tc",
        "--t_connection_mode",
        action="store",
        default="serial",
        nargs="?",
        const=1,
        help='Connection mode: "tcpip", "serial" or "http"',
    )
    parser.add_argument(
        "-tadd",
        "--t_address",
        action="store",
        default="None",
        nargs="?",
        const=1,
        help="IP Address.",
    )
    parser.add_argument(
        "-tp",
        "--t_port",
        action="store",
        default="COM4",
        nargs="?",
        const=1,
        help="Serial or TCP/IP port",
    )
    parser.add_argument(
        "-tw",
        "--t_switch_address",
        action="store",
        default="0",
        nargs="?",
        const=1,
        help="Switch address on the back of the pump",
    )
    parser.add_argument(
        "-tz",
        "--t_syringe_size",
        action="store",
        nargs="?",
        const=1,
        help="Syringe size in mL",
    )

    parser.add_argument(
        "-tl",
        "--t_simulation",
        action="store",
        nargs="?",
        const=1,
        default="False",
        help="Simulation mode or not (bool)",
    )

    args, unknown = parser.parse_known_args()

    # Initialize rospy node
    rospy.init_node("Tecan XLP600 syringe pump driver", anonymous=True)

    # Object oriented initialization for ROS
    syringe_pump = XLP6000Ros(
        device_name=args.t_device_name,
        connection_mode=args.t_connection_mode,
        address=args.t_address,
        port=args.t_port,
        syringe_size=args.t_syringe_size,
        switch_address=args.t_switch_address,
        simulation=args.t_simulation,
    )

    # Stop everything on shutdown
    rospy.on_shutdown(syringe_pump.stop())
    rospy.spin()
